# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/netanalysis/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/chemostep
pkgincludedir = $(includedir)/chemostep
pkglibdir = $(libdir)/chemostep
pkglibexecdir = $(libexecdir)/chemostep
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin10.2.0
host_triplet = x86_64-apple-darwin10.2.0
subdir = src/netanalysis
DIST_COMMON = $(libdotwriter_ainclude_HEADERS) \
	$(libnetanalysis_ainclude_HEADERS) \
	$(libpruneanalysis_ainclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libdotwriter_aincludedir)" \
	"$(DESTDIR)$(libnetanalysis_aincludedir)" \
	"$(DESTDIR)$(libpruneanalysis_aincludedir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libdotwriter_a_AR = $(AR) $(ARFLAGS)
libdotwriter_a_LIBADD =
am_libdotwriter_a_OBJECTS = DotNetConverter.$(OBJEXT)
libdotwriter_a_OBJECTS = $(am_libdotwriter_a_OBJECTS)
libnetanalysis_a_AR = $(AR) $(ARFLAGS)
libnetanalysis_a_LIBADD =
am__objects_1 =
am__objects_2 = RawSignal.$(OBJEXT) ImpulseSignal.$(OBJEXT) \
	Peak.$(OBJEXT)
am__objects_3 = $(am__objects_1) $(am__objects_2)
am__objects_4 = DataFilter.$(OBJEXT) Label.$(OBJEXT) \
	LabelIdentifier.$(OBJEXT) LabelSet.$(OBJEXT) \
	GenericLabelIdentifierSet.$(OBJEXT) LabelFactory.$(OBJEXT)
am__objects_5 = $(am__objects_1) $(am__objects_4)
am__objects_6 = ZeroOrderFilter.$(OBJEXT) \
	ZeroOrderImpulseFilter.$(OBJEXT) ZeroOrderLabel.$(OBJEXT) \
	ZeroOrderLabelIdentifier.$(OBJEXT) \
	ZeroOrderImpulseLabelIdentifier.$(OBJEXT)
am__objects_7 = $(am__objects_1) $(am__objects_6)
am__objects_8 = FirstOrderFilter.$(OBJEXT) \
	FirstOrderImpulseFilter.$(OBJEXT) FirstOrderLabel.$(OBJEXT) \
	FirstOrderLabelIdentifier.$(OBJEXT) \
	FirstOrderImpulseLabelIdentifier.$(OBJEXT)
am__objects_9 = $(am__objects_1) $(am__objects_8)
am__objects_10 = SecondOrderFilter.$(OBJEXT) \
	SecondOrderImpulseFilter.$(OBJEXT) SecondOrderLabel.$(OBJEXT) \
	SecondOrderLabelIdentifier.$(OBJEXT) \
	SecondOrderImpulseLabelIdentifier.$(OBJEXT)
am__objects_11 = $(am__objects_1) $(am__objects_10)
am_libnetanalysis_a_OBJECTS = $(am__objects_3) $(am__objects_5) \
	$(am__objects_7) $(am__objects_9) $(am__objects_11)
libnetanalysis_a_OBJECTS = $(am_libnetanalysis_a_OBJECTS)
libpruneanalysis_a_AR = $(AR) $(ARFLAGS)
libpruneanalysis_a_LIBADD =
am_libpruneanalysis_a_OBJECTS = PulseAnalyzer.$(OBJEXT) \
	BlitzNetPruner.$(OBJEXT)
libpruneanalysis_a_OBJECTS = $(am_libpruneanalysis_a_OBJECTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libdotwriter_a_SOURCES) $(libnetanalysis_a_SOURCES) \
	$(libpruneanalysis_a_SOURCES)
DIST_SOURCES = $(libdotwriter_a_SOURCES) $(libnetanalysis_a_SOURCES) \
	$(libpruneanalysis_a_SOURCES)
HEADERS = $(libdotwriter_ainclude_HEADERS) \
	$(libnetanalysis_ainclude_HEADERS) \
	$(libpruneanalysis_ainclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/nathandunn/svn/chemostep/missing --run aclocal-1.11
AMTAR = ${SHELL} /Users/nathandunn/svn/chemostep/missing --run tar
AUTOCONF = ${SHELL} /Users/nathandunn/svn/chemostep/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/nathandunn/svn/chemostep/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/nathandunn/svn/chemostep/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -arch ppc -funroll-loops
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"chemostep\" -DVERSION=\"1.0\" -DQT_THREAD_SUPPORT=1
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = cp -fp
INSTALL_PROGRAM = cp -fp
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /Users/nathandunn/svn/chemostep/missing --run makeinfo
MKDIR_P = ../.././install-sh -c -d
OBJEXT = o
PACKAGE = chemostep
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.0
abs_builddir = /Users/nathandunn/svn/chemostep/src/netanalysis
abs_srcdir = /Users/nathandunn/svn/chemostep/src/netanalysis
abs_top_builddir = /Users/nathandunn/svn/chemostep
abs_top_srcdir = /Users/nathandunn/svn/chemostep
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin10.2.0
build_alias = 
build_cpu = x86_64
build_os = darwin10.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin10.2.0
host_alias = 
host_cpu = x86_64
host_os = darwin10.2.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/nathandunn/svn/chemostep/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/./install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
platform = MACOSX
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LIBRARIES = libnetanalysis.a libpruneanalysis.a libdotwriter.a

# define options
HOST_OPTION = -Wno-long-double 
#X11_OPTION = -I/usr/X11R6/include
X11_OPTION = 
#QTLIBFLAGS = -L${QTDIR}/lib 
#MPI_OPTION = -I${MPICH}/include -DDOMPI
#MPI_LIB = -L${MPICH}/lib
#MPI_ADD = -lmpich 
AUTOGUILIBS = -L../autogui -L../tinyautogui -L../qtautogui -L../baseapps -L../utils
TINYXMLLIBS = -L../tinyxml 
CHEMOSTEPLIBS = -L../chemostep -L../blitzchemostep -L../tinyblitzchemostep
#QT_OPT = -pipe -I${QTDIR}/include
QT_OPT = # -pipe -I${QTDIR}/include
MISC_OPT = -Weffc++

# INCLUDES=-DMACOSX ${HOST_OPTION} ${QT_OPT} ${X11_OPT} -I${BZDIR} ${MPI_OPTION} -I../autogui -I../qtautogui -I../tinyautogui -I../baseapps -I../blitzchemostep -I../tinyblitzchemostep -I../chemostep -I../utils 
INCLUDES = -DMACOSX ${HOST_OPTION} ${QT_OPT} ${X11_OPT} -I${BZDIR}  -I../blitzchemostep -I../tinyblitzchemostep -I../chemostep -I../utils -I../wormsim 
general_headers = DataFilter.hpp Label.hpp LabelSet.hpp  LabelFactory.hpp GenericLabelIdentifierSet.hpp # LabelIdentifier.hpp 
general_source = DataFilter.cpp Label.cpp LabelIdentifier.cpp LabelSet.cpp GenericLabelIdentifierSet.cpp LabelFactory.cpp 
general = $(general_headers) $(general_source)
zeroorder_headers = ZeroOrderFilter.hpp ZeroOrderImpulseFilter.hpp ZeroOrderLabel.hpp ZeroOrderLabelIdentifier.hpp ZeroOrderImpulseLabelIdentifier.hpp  
zeroorder_source = ZeroOrderFilter.cpp ZeroOrderImpulseFilter.cpp ZeroOrderLabel.cpp ZeroOrderLabelIdentifier.cpp ZeroOrderImpulseLabelIdentifier.cpp   
firstorder_headers = FirstOrderFilter.hpp FirstOrderImpulseFilter.hpp FirstOrderLabel.hpp FirstOrderLabelIdentifier.hpp FirstOrderImpulseLabelIdentifier.hpp  
zeroorder = $(zeroorder_headers) $(zeroorder_source)
firstorder_source = FirstOrderFilter.cpp FirstOrderImpulseFilter.cpp FirstOrderLabel.cpp FirstOrderLabelIdentifier.cpp FirstOrderImpulseLabelIdentifier.cpp   
firstorder = $(firstorder_headers) $(firstorder_source)
secondorder_headers = SecondOrderFilter.hpp  SecondOrderImpulseFilter.hpp SecondOrderLabel.hpp SecondOrderLabelIdentifier.hpp SecondOrderImpulseLabelIdentifier.hpp  
secondorder_source = SecondOrderFilter.cpp  SecondOrderImpulseFilter.cpp SecondOrderLabel.cpp SecondOrderLabelIdentifier.cpp SecondOrderImpulseLabelIdentifier.cpp 
secondorder = $(secondorder_headers) $(secondorder_source)
signal_headers = RawSignal.hpp ImpulseSignal.hpp Peak.hpp # StepSignal.hpp
signal_sources = RawSignal.cpp ImpulseSignal.cpp Peak.cpp # StepSignal.cpp
signal = $(signal_headers) $(signal_sources)

# libnetanalysis dependencies
libnetanalysis_aincludedir = ${prefix}/include/chemostep
libnetanalysis_ainclude_HEADERS = $(signal_headers)  $(general_headers) $(zeroorder_headers) $(firstorder_headers) $(secondorder_headers)
libnetanalysis_a_SOURCES = $(signal) $(general) $(zeroorder) $(firstorder) $(secondorder)

# libpruneanalysis dependencies
libpruneanalysis_aincludedir = ${prefix}/include/chemostep
libpruneanalysis_ainclude_HEADERS = PulseAnalyzer.hpp BlitzNetPruner.hpp
libpruneanalysis_a_SOURCES = PulseAnalyzer.cpp BlitzNetPruner.cpp 
libdotwriter_aincludedir = ${prefix}/include/chemostep
libdotwriter_ainclude_HEADERS = DotNetConverter.hpp
libdotwriter_a_SOURCES = DotNetConverter.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/netanalysis/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/netanalysis/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(libdir)" && rm -f $$files

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libdotwriter.a: $(libdotwriter_a_OBJECTS) $(libdotwriter_a_DEPENDENCIES) 
	-rm -f libdotwriter.a
	$(libdotwriter_a_AR) libdotwriter.a $(libdotwriter_a_OBJECTS) $(libdotwriter_a_LIBADD)
	$(RANLIB) libdotwriter.a
libnetanalysis.a: $(libnetanalysis_a_OBJECTS) $(libnetanalysis_a_DEPENDENCIES) 
	-rm -f libnetanalysis.a
	$(libnetanalysis_a_AR) libnetanalysis.a $(libnetanalysis_a_OBJECTS) $(libnetanalysis_a_LIBADD)
	$(RANLIB) libnetanalysis.a
libpruneanalysis.a: $(libpruneanalysis_a_OBJECTS) $(libpruneanalysis_a_DEPENDENCIES) 
	-rm -f libpruneanalysis.a
	$(libpruneanalysis_a_AR) libpruneanalysis.a $(libpruneanalysis_a_OBJECTS) $(libpruneanalysis_a_LIBADD)
	$(RANLIB) libpruneanalysis.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/BlitzNetPruner.Po
include ./$(DEPDIR)/DataFilter.Po
include ./$(DEPDIR)/DotNetConverter.Po
include ./$(DEPDIR)/FirstOrderFilter.Po
include ./$(DEPDIR)/FirstOrderImpulseFilter.Po
include ./$(DEPDIR)/FirstOrderImpulseLabelIdentifier.Po
include ./$(DEPDIR)/FirstOrderLabel.Po
include ./$(DEPDIR)/FirstOrderLabelIdentifier.Po
include ./$(DEPDIR)/GenericLabelIdentifierSet.Po
include ./$(DEPDIR)/ImpulseSignal.Po
include ./$(DEPDIR)/Label.Po
include ./$(DEPDIR)/LabelFactory.Po
include ./$(DEPDIR)/LabelIdentifier.Po
include ./$(DEPDIR)/LabelSet.Po
include ./$(DEPDIR)/Peak.Po
include ./$(DEPDIR)/PulseAnalyzer.Po
include ./$(DEPDIR)/RawSignal.Po
include ./$(DEPDIR)/SecondOrderFilter.Po
include ./$(DEPDIR)/SecondOrderImpulseFilter.Po
include ./$(DEPDIR)/SecondOrderImpulseLabelIdentifier.Po
include ./$(DEPDIR)/SecondOrderLabel.Po
include ./$(DEPDIR)/SecondOrderLabelIdentifier.Po
include ./$(DEPDIR)/ZeroOrderFilter.Po
include ./$(DEPDIR)/ZeroOrderImpulseFilter.Po
include ./$(DEPDIR)/ZeroOrderImpulseLabelIdentifier.Po
include ./$(DEPDIR)/ZeroOrderLabel.Po
include ./$(DEPDIR)/ZeroOrderLabelIdentifier.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-libdotwriter_aincludeHEADERS: $(libdotwriter_ainclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libdotwriter_aincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libdotwriter_aincludedir)"
	@list='$(libdotwriter_ainclude_HEADERS)'; test -n "$(libdotwriter_aincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libdotwriter_aincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libdotwriter_aincludedir)" || exit $$?; \
	done

uninstall-libdotwriter_aincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libdotwriter_ainclude_HEADERS)'; test -n "$(libdotwriter_aincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdotwriter_aincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libdotwriter_aincludedir)" && rm -f $$files
install-libnetanalysis_aincludeHEADERS: $(libnetanalysis_ainclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libnetanalysis_aincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libnetanalysis_aincludedir)"
	@list='$(libnetanalysis_ainclude_HEADERS)'; test -n "$(libnetanalysis_aincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libnetanalysis_aincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libnetanalysis_aincludedir)" || exit $$?; \
	done

uninstall-libnetanalysis_aincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libnetanalysis_ainclude_HEADERS)'; test -n "$(libnetanalysis_aincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libnetanalysis_aincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libnetanalysis_aincludedir)" && rm -f $$files
install-libpruneanalysis_aincludeHEADERS: $(libpruneanalysis_ainclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libpruneanalysis_aincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libpruneanalysis_aincludedir)"
	@list='$(libpruneanalysis_ainclude_HEADERS)'; test -n "$(libpruneanalysis_aincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libpruneanalysis_aincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libpruneanalysis_aincludedir)" || exit $$?; \
	done

uninstall-libpruneanalysis_aincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libpruneanalysis_ainclude_HEADERS)'; test -n "$(libpruneanalysis_aincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libpruneanalysis_aincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libpruneanalysis_aincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdotwriter_aincludedir)" "$(DESTDIR)$(libnetanalysis_aincludedir)" "$(DESTDIR)$(libpruneanalysis_aincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libdotwriter_aincludeHEADERS \
	install-libnetanalysis_aincludeHEADERS \
	install-libpruneanalysis_aincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES \
	uninstall-libdotwriter_aincludeHEADERS \
	uninstall-libnetanalysis_aincludeHEADERS \
	uninstall-libpruneanalysis_aincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES \
	install-libdotwriter_aincludeHEADERS \
	install-libnetanalysis_aincludeHEADERS \
	install-libpruneanalysis_aincludeHEADERS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLIBRARIES \
	uninstall-libdotwriter_aincludeHEADERS \
	uninstall-libnetanalysis_aincludeHEADERS \
	uninstall-libpruneanalysis_aincludeHEADERS


%.moc.cpp: %.h
	$(MOC) $< -o $@ 

%.class: %.java
	`which jikes` $< -o $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
