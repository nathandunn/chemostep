#pragma rtGlobals=1		// Use modern global access method.// this is the file// need to get the stats from all of the other worms, centered// there should be 30 points, centered around 0 (TimeCoursePointPlot)// using the proba_forward datafunction  getOutputs()		setdatafolder("root:") ; 	string rootFolder = getdataFolder(1) ; 	string outputFolder = rootFolder+ "output:" ; 		// gets the number of directories	variable numDir = countobjects(rootFolder,4) -1 ; // don't do output dir			variable dirCount  =0 ; 	string thisFolder = getindexedobjName(rootfolder,4,0)	string timeCourse = "TimeCoursePointPlot" ; 	string probForward = "proba_forward" ; 	string probOmega = "proba_omega" ; 	string probReversal = "proba_reversal" ; 	string probOther = "proba_other" ; 	variable goBack = 12 ; 	variable goForward = 18 ; 	wave dasForward = $probForward ; 		variable index1 = 0 ;	variable zeroIndex = 0 ;  	// for each folder . . 	for(   dirCount = 0 ; dirCount < numDir ; dirCount += 1)		// print "setting anew: "+ getindexedobjname(rootfolder,4,dircount) ; 		setdatafolder(rootfolder+getindexedobjname(rootfolder,4,dirCount)) ; 	// 1. find the zero point in "TimeCoursePointPlot" and record the matrix point		index1 = 0  ; 				wave thisTimeCourse=$timeCourse				do			index1 +=1 ;		while(thisTimeCourse[index1]<0)				zeroIndex = index1-1 ; //		print getdatafolder(2) ; //		print "zero at:  " + num2str(zeroIndex)+"  gives: "+num2str(thisTimeCourse[zeroIndex] ); 									// 2.  take the matrix point and subtract back 12 points in proba_forward and/or the others	// and calculate 18 forward, and copy this matrix.  This should get dumped out.  		string outputWaveName =  outputFolder+getDataFolder(0)  +"fwd"  ; 		print outputWaveName ; 		wave outputWave = outputWaveName ; 		make/o/n=(goBack+goForward) outputWave 		variable from, andto ; 		from = zeroIndex - goBack + 1 ; 		andto = zeroIndex + goForward -1 ; 		variable waveIndex = 0 ; 		variable outputIndex = 0 ; 		wave proba_forward ; 		for(waveIndex = -goBack+1 ; waveIndex < (goForward+1) ; waveIndex +=1 , outputIndex+=1 )	//	print "the wave index " + num2str(waveIndex) ; 			outputWave[outputIndex] = proba_forward[waveIndex+zeroIndex ] ;						endfor		duplicate/o outputWave $outputWaveName ; 		killwaves/z  outputWave ; 			endfor 		setdatafolder(rootfolder) ; 	end macro saveDataByName()//	getindexedobjname(getdatafolder(1)		variable numWaves = countobjects(getdatafolder(1),1) ; 		variable waveIndex = 0 ; 	string currentWaveName = "" ; //	variable myPath ; 	PathInfo/S myPath ; //	print "print: " + myPath ; 	print "print2 : " + S_path ; //	Open/P=myMapth refNum		NewPath/O myPath "Macintosh HD:Users:nathandunn:cvs:CHEMOSTEP_DATA:bin10sec:"	//	for( waveIndex = 0   ; waveIndex < numWaves ;  waveIndex += 1 )	do	 	currentWaveName = getIndexedobjname(getdatafolder(1),1, waveIndex) ; 		print currentWaveName ; 		save/O/A=0/B/J/P=myPath currentWaveName as currentWaveName+".txt" ;		waveIndex += 1 ; 	while(waveIndex < numWaves )//	endforendmacro 